###############################################################################
# Bootstrap
#

bootstrap_http_proxy: "{{ lookup('env', 'HTTP_PROXY') }}"
bootstrap_no_proxy: "{{ lookup('env', 'NO_PROXY') }}"
bootstrap_http_proxy_packages:
bootstrap_http_proxy_packages_per_repo:
- host: download.opensuse.org
  proxy: "{{ lookup('env', 'HTTP_PROXY') }}"
- host: ppa.launchpad.net
  proxy: "{{ lookup('env', 'HTTP_PROXY') }}"

bootstrap_syslog_disable_local_storage: false
bootstrap_syslog_target_host: "{{ lookup('env', 'SYSLOG_HOSTNAME') }}"
bootstrap_syslog_target_port: "{{ lookup('env', 'SYSLOG_PORT') }}"
bootstrap_syslog_target_protocol: "{{ lookup('env', 'SYSLOG_PROTOCOL') }}"
bootstrap_syslog_target_log_format: "{{ lookup('env', 'SYSLOG_LOG_FORMAT') }}"

###############################################################################
# Telegraf
#

traefik_consul_service:
- service:
    name: traefik
    tags:
    - appliance
    - "{{ lookup('env', 'TRAEFIK_CONSUL_PREFIX') }}.enable=true"
    - "{{ lookup('env', 'TRAEFIK_CONSUL_PREFIX') }}.http.routers.dashboard.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
    - "{{ lookup('env', 'TRAEFIK_CONSUL_PREFIX') }}.http.routers.dashboard.service=api@internal"
    port: 80
    enable_tag_override: false
    checks:
    - args: [systemctl, status, traefik.service]
      interval: 60s

telegraf_output_influxdbv2_config:
  token: lookup('env', 'INFLUXDB_TOKEN')
  org: lookup('env', 'INFLUXDB_ORG')
  bucket: lookup('env', 'INFLUXDB_BUCKET')
  urls:
  - lookup('env', 'INFLUXDB_ENDPOINT_URL')

telegraf_influxdb_listener_config:
  service_address: :8086
  read_timeout: 10s
  write_timeout: 10s
  max_body_size: 0
  max_line_size: 0

###############################################################################
# Podman
#

podman_http_proxy: "{{ lookup('env', 'HTTP_PROXY') }}"
podman_https_proxy: "{{ lookup('env', 'HTTPS_PROXY') }}"
podman_no_proxy: "{{ lookup('env', 'NO_PROXY') }}"

podman_containers:
- name: traefik
  description: Traefik reverse proxy
  after:
  run_opts: >
    --rm
    --http-proxy=false
    --publish 80:8080
    --publish 443:8443
  image: docker.io/library/traefik
  command: traefik
  command_opts: >
    --entrypoints.http.address=:8080
    --entrypoints.https.address=:8443
    --accesslog=true
    --accesslog.format=json
    --log=true
    --log.format=json
    --api.dashboard=true
    --providers.consulcatalog.endpoint.address=http://10.88.0.1:8500
    --providers.consulcatalog.prefix={{ lookup('env', 'TRAEFIK_CONSUL_PREFIX') }}
    --providers.consulcatalog.exposedByDefault=false
    {% if lookup('env', 'METRICS_ENDPOINT_URL') | length > 0 and lookup('env', 'INFLUXDB_ORG') | length > 0 and lookup('env', 'INFLUXDB_TOKEN') | length > 0 and lookup('env', 'INFLUXDB_BUCKET') | length > 0 %}
    --metrics.influxdb=true
    --metrics.influxdb.protocol=http
    --metrics.influxdb.address=10.88.0.1:{{ telegraf_influxdb_listener_config.service_address | regex_replace('^\.*?:','') }}
    {% endif %}

###############################################################################
# Dnsmasq
#

dnsmasq_main_conf:
  servers:
  - "{{ lookup('env', 'CONSUL_DNS_SERVER') }}"

dnsmasq_forwarding_zones:
- name: "{{ lookup('env', 'CONSUL_DNS_DOMAIN') }}"
  forwarder:
    hostname: 127.0.0.1
    port: 8600

###############################################################################
# Consul
#
consul_server_mode: false

consul_retry_join: ["{{ lookup('env', 'CONSUL_SERVERS') }}"]
consul_dns_domain: "{{ lookup('env', 'CONSUL_DNS_DOMAIN') }}"
consul_datacenter: "{{ lookup('env', 'CONSUL_DATACENTER') }}"

consul_http_proxy: "{{ lookup('env', 'HTTP_PROXY') }}"
consul_http_no_proxy: "{{ lookup('env', 'NO_PROXY') }}"

consul_bind: "{{ lookup('env', 'BACK_IP') }}"
consul_advertise_addr: "{{ lookup('env', 'BACK_IP') }}"
consul_serf_lan_bind: "{{ lookup('env', 'BACK_IP') }}"
consul_client_addr: [0.0.0.0]
consul_consul_encrypt: "{{ lookup('env', 'CONSUL_ENCRYPT') }}"

###############################################################################
# Netdata
# TODO: traefik metadata
netdata_consul_service:
- service:
    name: netdata-{{ ansible_hostname }}
    tags:
    - metrics
    - appliance
    - magrit
    - "{{ lookup('env', 'TRAEFIK_CONSUL_PREFIX') }}.enable=true"
    - "{{ lookup('env', 'TRAEFIK_CONSUL_PREFIX') }}.http.routers.netdata-{{ ansible_hostname }}.rule=PathPrefix(`/perf/{{ ansible_hostname }}`)"
    - "{{ lookup('env', 'TRAEFIK_CONSUL_PREFIX') }}.http.middlewares.netdata-{{ ansible_hostname }}.stripprefix.prefixes=/perf/{{ ansible_hostname }}"
    - "{{ lookup('env', 'TRAEFIK_CONSUL_PREFIX') }}.http.routers.netdata-{{ ansible_hostname }}.middlewares=netdata-{{ ansible_hostname }}"
    port: 19999
    enable_tag_override: false
    checks:
    - http: http://0.0.0.0:19999/
      interval: 60s
